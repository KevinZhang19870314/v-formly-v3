import{_ as p,r as o,o as e,c as r,a as s,b as n,e as t,d as c}from"./app.5b6a6178.js";const l={},i=s("h1",{id:"自定义校验",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#自定义校验","aria-hidden":"true"},"#"),n(" 自定义校验")],-1),u={href:"https://js-schema.org/",target:"_blank",rel:"noopener noreferrer"},k={href:"https://ajv.js.org/",target:"_blank",rel:"noopener noreferrer"},d=c(`<div class="custom-container tip"><p class="custom-container-title">注意</p><p>不管采用哪种方式来构建错误文本，都必须通过<code>keyword</code>来区分错误类型。</p></div><h2 id="自定义错误文本内容" tabindex="-1"><a class="header-anchor" href="#自定义错误文本内容" aria-hidden="true">#</a> 自定义错误文本内容</h2><p>支持全局定义<code>errors</code>和局部更改<code>ui.errors</code>覆盖默认的错误文本。</p><h3 id="全局修改" tabindex="-1"><a class="header-anchor" href="#全局修改" aria-hidden="true">#</a> 全局修改</h3><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> VFormly <span class="token keyword">from</span> <span class="token string">&quot;v-formly-v3&quot;</span><span class="token punctuation">;</span>

Vue<span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span>VFormly<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">ui</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">errors</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token string">&quot;必填项&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="局部更改" tabindex="-1"><a class="header-anchor" href="#局部更改" aria-hidden="true">#</a> 局部更改</h3><p>局部更改即在编写某个表单的 meta 时候覆盖某个属性的<code>ui.errors</code>。</p><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;object&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">properties</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;姓名&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span>
      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&quot;kevin&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">ui</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">showRequired</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token literal-property property">errors</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;required&quot;</span><span class="token operator">:</span> <span class="token string">&quot;请输入姓名&quot;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><div class="highlight-line"> </div><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br></div></div><h2 id="自定义校验-1" tabindex="-1"><a class="header-anchor" href="#自定义校验-1" aria-hidden="true">#</a> 自定义校验</h2><p>标准校验有时候并不一定满足业务需求，这里就需要写自定义校验。</p><h3 id="同步校验" tabindex="-1"><a class="header-anchor" href="#同步校验" aria-hidden="true">#</a> 同步校验</h3><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;object&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">properties</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;姓名&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span>
      <span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&quot;kevin&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">ui</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">showRequired</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
        <span class="token function-variable function">validator</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span>val <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">keyword</span><span class="token operator">:</span> <span class="token string">&quot;required&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&quot;Required name&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><br><div class="highlight-line"> </div><br><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br></div></div><h3 id="异步校验" tabindex="-1"><a class="header-anchor" href="#异步校验" aria-hidden="true">#</a> 异步校验</h3><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token literal-property property">meta</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;object&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">properties</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">asyncError</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;异步错误（2秒）&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;string&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">ui</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">showRequired</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
    <span class="token function-variable function">validatorAsync</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span>
            <span class="token operator">!</span>val <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">keyword</span><span class="token operator">:</span> <span class="token string">&quot;required&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&quot;Required asyncError&quot;</span><span class="token punctuation">,</span><span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;asyncError&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="highlight-lines"><br><br><br><br><br><br><div class="highlight-line"> </div><br><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br><br><br></div></div>`,14);function h(y,g){const a=o("ExternalLinkIcon");return e(),r("div",null,[i,s("p",null,[n("v-formly-v3 除了支持标准的"),s("a",u,[n("JSON Schema"),t(a)]),n("和"),s("a",k,[n("Ajv"),t(a)]),n("校验以外，还支持自定义校验规则及错误文本内容。")]),d])}const q=p(l,[["render",h],["__file","custom-validator.html.vue"]]);export{q as default};
